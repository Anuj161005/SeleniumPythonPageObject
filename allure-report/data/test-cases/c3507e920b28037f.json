{"uid":"c3507e920b28037f","name":"test_carNamesAndPrices[chrome-Tata-Tata Cars]","fullName":"test_carwale.Test_carwale#test_carNamesAndPrices","historyId":"b2fda4009448e05ce03b417b1e4813a5","time":{"start":1750943769434,"stop":1750943773955,"duration":4521},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(text(),'Find New Cars')]\"}\n  (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff74469cda5+78885]\n\tGetHandleVerifier [0x0x7ff74469ce00+78976]\n\t(No symbol) [0x0x7ff744459bca]\n\t(No symbol) [0x0x7ff7444b0766]\n\t(No symbol) [0x0x7ff7444b0a1c]\n\t(No symbol) [0x0x7ff744504467]\n\t(No symbol) [0x0x7ff7444d8bcf]\n\t(No symbol) [0x0x7ff74450122f]\n\t(No symbol) [0x0x7ff7444d8963]\n\t(No symbol) [0x0x7ff7444a16b1]\n\t(No symbol) [0x0x7ff7444a2443]\n\tGetHandleVerifier [0x0x7ff744974eed+3061101]\n\tGetHandleVerifier [0x0x7ff74496f33d+3037629]\n\tGetHandleVerifier [0x0x7ff74498e592+3165202]\n\tGetHandleVerifier [0x0x7ff7446b730e+186766]\n\tGetHandleVerifier [0x0x7ff7446beb3f+217535]\n\tGetHandleVerifier [0x0x7ff7446a59b4+114740]\n\tGetHandleVerifier [0x0x7ff7446a5b69+115177]\n\tGetHandleVerifier [0x0x7ff74468c368+10728]\n\tBaseThreadInitThunk [0x0x7ff9f75ee8d7+23]\n\tRtlUserThreadStart [0x0x7ff9f8cdc34c+44]","statusTrace":"self = <Testcases.test_carwale.Test_carwale object at 0x0000023B3751E090>\ncarBrand = 'Tata', carTitle = 'Tata Cars'\n\n    @pytest.mark.parametrize(\"carBrand,carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_carNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"*********Inside Cars names and prices Test**********\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        #path = \"../Excel/testData.xlsx\"\n        #sheetname = \"UploadData\"\n        if carBrand == \"Mahindra\":\n            home.gotoNewCars().selectMahindra()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n            assert title == carTitle, \"The title is not matching\"\n            car.carNameAndPrices()\n            # car.carNameAndPrices(path,sheetname)\n        elif carBrand == \"Tata\":\n>           home.gotoNewCars().selectTata()\n            ^^^^^^^^^^^^^^^^^^\n\ntest_carwale.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\HomePage.py:15: in gotoNewCars\n    self.click(\"findNewCar_XPATH\")\n..\\Pages\\BasePage.py:19: in click\n    self.driver.find_element(By.XPATH, configReader.readConfig(\"locators\", locator)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023B374DB530>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff74468c368+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff9f75ee8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ff9f8cdc34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(text(),'Find New Cars')]\"}\nE         (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff74469cda5+78885]\nE       \tGetHandleVerifier [0x0x7ff74469ce00+78976]\nE       \t(No symbol) [0x0x7ff744459bca]\nE       \t(No symbol) [0x0x7ff7444b0766]\nE       \t(No symbol) [0x0x7ff7444b0a1c]\nE       \t(No symbol) [0x0x7ff744504467]\nE       \t(No symbol) [0x0x7ff7444d8bcf]\nE       \t(No symbol) [0x0x7ff74450122f]\nE       \t(No symbol) [0x0x7ff7444d8963]\nE       \t(No symbol) [0x0x7ff7444a16b1]\nE       \t(No symbol) [0x0x7ff7444a2443]\nE       \tGetHandleVerifier [0x0x7ff744974eed+3061101]\nE       \tGetHandleVerifier [0x0x7ff74496f33d+3037629]\nE       \tGetHandleVerifier [0x0x7ff74498e592+3165202]\nE       \tGetHandleVerifier [0x0x7ff7446b730e+186766]\nE       \tGetHandleVerifier [0x0x7ff7446beb3f+217535]\nE       \tGetHandleVerifier [0x0x7ff7446a59b4+114740]\nE       \tGetHandleVerifier [0x0x7ff7446a5b69+115177]\nE       \tGetHandleVerifier [0x0x7ff74468c368+10728]\nE       \tBaseThreadInitThunk [0x0x7ff9f75ee8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff9f8cdc34c+44]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_browser","time":{"start":1750943765880,"stop":1750943769433,"duration":3553},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"log_on_failure","time":{"start":1750943769433,"stop":1750943769433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(text(),'Find New Cars')]\"}\n  (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff74469cda5+78885]\n\tGetHandleVerifier [0x0x7ff74469ce00+78976]\n\t(No symbol) [0x0x7ff744459bca]\n\t(No symbol) [0x0x7ff7444b0766]\n\t(No symbol) [0x0x7ff7444b0a1c]\n\t(No symbol) [0x0x7ff744504467]\n\t(No symbol) [0x0x7ff7444d8bcf]\n\t(No symbol) [0x0x7ff74450122f]\n\t(No symbol) [0x0x7ff7444d8963]\n\t(No symbol) [0x0x7ff7444a16b1]\n\t(No symbol) [0x0x7ff7444a2443]\n\tGetHandleVerifier [0x0x7ff744974eed+3061101]\n\tGetHandleVerifier [0x0x7ff74496f33d+3037629]\n\tGetHandleVerifier [0x0x7ff74498e592+3165202]\n\tGetHandleVerifier [0x0x7ff7446b730e+186766]\n\tGetHandleVerifier [0x0x7ff7446beb3f+217535]\n\tGetHandleVerifier [0x0x7ff7446a59b4+114740]\n\tGetHandleVerifier [0x0x7ff7446a5b69+115177]\n\tGetHandleVerifier [0x0x7ff74468c368+10728]\n\tBaseThreadInitThunk [0x0x7ff9f75ee8d7+23]\n\tRtlUserThreadStart [0x0x7ff9f8cdc34c+44]","statusTrace":"self = <Testcases.test_carwale.Test_carwale object at 0x0000023B3751E090>\ncarBrand = 'Tata', carTitle = 'Tata Cars'\n\n    @pytest.mark.parametrize(\"carBrand,carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_carNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"*********Inside Cars names and prices Test**********\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        #path = \"../Excel/testData.xlsx\"\n        #sheetname = \"UploadData\"\n        if carBrand == \"Mahindra\":\n            home.gotoNewCars().selectMahindra()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n            assert title == carTitle, \"The title is not matching\"\n            car.carNameAndPrices()\n            # car.carNameAndPrices(path,sheetname)\n        elif carBrand == \"Tata\":\n>           home.gotoNewCars().selectTata()\n            ^^^^^^^^^^^^^^^^^^\n\ntest_carwale.py:70: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Pages\\HomePage.py:15: in gotoNewCars\n    self.click(\"findNewCar_XPATH\")\n..\\Pages\\BasePage.py:19: in click\n    self.driver.find_element(By.XPATH, configReader.readConfig(\"locators\", locator)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023B374DB530>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff74468c368+10728]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff9f75ee8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ff9f8cdc34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(text(),'Find New Cars')]\"}\nE         (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff74469cda5+78885]\nE       \tGetHandleVerifier [0x0x7ff74469ce00+78976]\nE       \t(No symbol) [0x0x7ff744459bca]\nE       \t(No symbol) [0x0x7ff7444b0766]\nE       \t(No symbol) [0x0x7ff7444b0a1c]\nE       \t(No symbol) [0x0x7ff744504467]\nE       \t(No symbol) [0x0x7ff7444d8bcf]\nE       \t(No symbol) [0x0x7ff74450122f]\nE       \t(No symbol) [0x0x7ff7444d8963]\nE       \t(No symbol) [0x0x7ff7444a16b1]\nE       \t(No symbol) [0x0x7ff7444a2443]\nE       \tGetHandleVerifier [0x0x7ff744974eed+3061101]\nE       \tGetHandleVerifier [0x0x7ff74496f33d+3037629]\nE       \tGetHandleVerifier [0x0x7ff74498e592+3165202]\nE       \tGetHandleVerifier [0x0x7ff7446b730e+186766]\nE       \tGetHandleVerifier [0x0x7ff7446beb3f+217535]\nE       \tGetHandleVerifier [0x0x7ff7446a59b4+114740]\nE       \tGetHandleVerifier [0x0x7ff7446a5b69+115177]\nE       \tGetHandleVerifier [0x0x7ff74468c368+10728]\nE       \tBaseThreadInitThunk [0x0x7ff9f75ee8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff9f8cdc34c+44]\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException","steps":[],"attachments":[{"uid":"cb16da7874c47910","name":"log","source":"cb16da7874c47910.txt","type":"text/plain","size":178}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"log_on_failure::0","time":{"start":1750943774027,"stop":1750943774427,"duration":400},"status":"passed","steps":[],"attachments":[{"uid":"f8e17739df8e2f3a","name":"dologin","source":"f8e17739df8e2f3a.png","type":"image/png","size":1300810}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"get_browser::0","time":{"start":1750943774428,"stop":1750943776696,"duration":2268},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_carwale"},{"name":"subSuite","value":"Test_carwale"},{"name":"host","value":"Anuj-PC"},{"name":"thread","value":"10148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_carwale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"carBrand","value":"'Tata'"},{"name":"carTitle","value":"'Tata Cars'"},{"name":"get_browser","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"c3507e920b28037f.json","parameterValues":["'Tata'","'Tata Cars'","'chrome'"]}