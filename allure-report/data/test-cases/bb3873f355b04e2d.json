{"uid":"bb3873f355b04e2d","name":"test_carNamesAndPrices[chrome-Hyundai-Hyundaii Cars]","fullName":"test_carwale.Test_carwale#test_carNamesAndPrices","historyId":"63509832fe2fdb82102c170ae079608c","time":{"start":1750946139685,"stop":1750946140828,"duration":1143},"status":"failed","statusMessage":"AssertionError: The title is not matching\nassert 'Hyundai Cars' == 'Hyundaii Cars'\n  \n  \u001B[0m\u001B[91m- Hyundaii Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?        -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ Hyundai Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <Testcases.test_carwale.Test_carwale object at 0x000001398EA59F10>, carBrand = 'Hyundai', carTitle = 'Hyundaii Cars'\n\n    @pytest.mark.parametrize(\"carBrand,carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_carNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"*********Inside Cars names and prices Test**********\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        #path = \"../Excel/testData.xlsx\"\n        #sheetname = \"UploadData\"\n        if carBrand == \"Mahindra\":\n            home.gotoNewCars().selectMahindra()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n            assert title == carTitle, \"The title is not matching\"\n            car.carNameAndPrices()\n            # car.carNameAndPrices(path,sheetname)\n        elif carBrand == \"Tata\":\n            home.gotoNewCars().selectTata()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n            assert title == carTitle, \"The title is not matching\"\n            car.carNameAndPrices()\n            # car.carNameAndPrices(path,sheetname)\n    \n        elif carBrand == \"Hyundai\":\n            home.gotoNewCars().selectHyundai()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n>           assert title == carTitle, \"The title is not matching\"\nE           AssertionError: The title is not matching\nE           assert 'Hyundai Cars' == 'Hyundaii Cars'\nE             \nE             \u001B[0m\u001B[91m- Hyundaii Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE             ?        -\u001B[90m\u001B[39;49;00m\nE             \u001B[92m+ Hyundai Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\ntest_carwale.py:81: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_browser","time":{"start":1750946136183,"stop":1750946139684,"duration":3501},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"log_on_failure","time":{"start":1750946139684,"stop":1750946139684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: The title is not matching\nassert 'Hyundai Cars' == 'Hyundaii Cars'\n  \n  \u001B[0m\u001B[91m- Hyundaii Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  ?        -\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ Hyundai Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <Testcases.test_carwale.Test_carwale object at 0x000001398EA59F10>, carBrand = 'Hyundai', carTitle = 'Hyundaii Cars'\n\n    @pytest.mark.parametrize(\"carBrand,carTitle\", dataprovider.get_data(\"NewCarsTest\"))\n    def test_carNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"*********Inside Cars names and prices Test**********\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n        #path = \"../Excel/testData.xlsx\"\n        #sheetname = \"UploadData\"\n        if carBrand == \"Mahindra\":\n            home.gotoNewCars().selectMahindra()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n            assert title == carTitle, \"The title is not matching\"\n            car.carNameAndPrices()\n            # car.carNameAndPrices(path,sheetname)\n        elif carBrand == \"Tata\":\n            home.gotoNewCars().selectTata()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n            assert title == carTitle, \"The title is not matching\"\n            car.carNameAndPrices()\n            # car.carNameAndPrices(path,sheetname)\n    \n        elif carBrand == \"Hyundai\":\n            home.gotoNewCars().selectHyundai()\n            title = car.getCarTitle()\n            print((\"car title is: \"+title).encode('utf8'))\n>           assert title == carTitle, \"The title is not matching\"\nE           AssertionError: The title is not matching\nE           assert 'Hyundai Cars' == 'Hyundaii Cars'\nE             \nE             \u001B[0m\u001B[91m- Hyundaii Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE             ?        -\u001B[90m\u001B[39;49;00m\nE             \u001B[92m+ Hyundai Cars\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\ntest_carwale.py:81: AssertionError","steps":[],"attachments":[{"uid":"144d0347e24a9ab4","name":"log","source":"144d0347e24a9ab4.txt","type":"text/plain","size":373},{"uid":"c4ed22ec8a39244c","name":"stdout","source":"c4ed22ec8a39244c.txt","type":"text/plain","size":30}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"log_on_failure::0","time":{"start":1750946140963,"stop":1750946141113,"duration":150},"status":"passed","steps":[],"attachments":[{"uid":"a311b5f1ecc234e9","name":"dologin","source":"a311b5f1ecc234e9.png","type":"image/png","size":141334}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentStep":false},{"name":"get_browser::0","time":{"start":1750946141115,"stop":1750946143335,"duration":2220},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"suite","value":"test_carwale"},{"name":"subSuite","value":"Test_carwale"},{"name":"host","value":"Anuj-PC"},{"name":"thread","value":"22108-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_carwale"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"carBrand","value":"'Hyundai'"},{"name":"carTitle","value":"'Hyundaii Cars'"},{"name":"get_browser","value":"'chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"bb3873f355b04e2d.json","parameterValues":["'Hyundai'","'Hyundaii Cars'","'chrome'"]}